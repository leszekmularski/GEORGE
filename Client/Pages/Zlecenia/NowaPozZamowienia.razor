@using GEORGE.Shared.Models
@using GEORGE.Shared.ViewModels
@inject HttpClient Http;
@using Microsoft.AspNetCore.Components.Web
@inject Utilities.ILocalStorage LocalStorage
@inject NavigationManager NavigationManager

<style>
    .form-item-small-margin {
        margin-bottom: 8px; /* Możesz dostosować tę wartość */
    }
</style>

@if (bAdmin == false)
{
    <p><em>Nie masz uprawnień....</em></p>
}
else
{

    <AntDesign.Form Model="@elementyZamowienia" Layout="FormLayout.Horizontal" OnFinish="@HandleSubmit">
        <Tabs DefaultActiveKey="0" TabPosition="TabPosition.Left">
            <TabPane Key="0" Tab="Pozycje zamówienia">
                <FormItem Required Label="Wybierz producenta (dostawcę)">
                    <Select Mode="default"
                            DataSource="@_producenci"
                            @bind-Value="@context.ElemetZamDoZlecen.RowIdProducent"
                            LabelName="@nameof(Producent.NazwaProducenta)"
                            ValueName="@nameof(Producent.RowId)">
                    </Select>
                </FormItem>
                <AntDesign.FormItem Label="Nazwa produktu">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.NazwaProduktu" Required Placeholder="Podaj Nazwę produktu" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Numer Katalogowy">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.NumerKatalogowy" Placeholder="Podaj numer katalogowy producemnta" />
                </AntDesign.FormItem>

                <AntDesign.FormItem Label="Jednostka">
                  @*   <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Jednostka" Placeholder="Podaj jednostkę (szt. kpl. litr, metr)" /> *@
                   <Select TItem="Item"  TItemValue="string"
                                            DataSource="@_itemsJednostki"
                                            @bind-Value="@elementyZamowienia.ElemetZamDoZlecen.Jednostka"
                        ValueName="@nameof(Item.Value)"
                        LabelName="@nameof(Item.Name)"
                        DefaultActiveFirstOption
		                Style="width: 200px;">
                   @*  <ItemTemplate>
                        <span>@((contextX as Item).DisplayName)</span>
                    </ItemTemplate> *@
                </Select> 
                </AntDesign.FormItem>

                <AntDesign.FormItem Label="Kolor">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Kolor" Placeholder="Podaj kolor" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Ilość">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.IloscSztuk" Required />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Typ (Kod producenta)">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Typ" Placeholder="Podaj typ produktu" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Czy zamówiono">
                    <AntDesign.Checkbox @bind-Value="elementyZamowienia.ElemetZamDoZlecen.CzyZamowiono" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Czy dostarczono">
                    <Switch @bind-Value="@context.ElemetZamDoZlecen.PozDostarczono" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Dodaj uwagę sprawdzić!!!">
                    <Button OnClick="DodajUwSprawdz">Kliknij aby dodać Uwagę - Sprawdź!!!</Button>
                </AntDesign.FormItem>
            </TabPane>

            <!-- Kolumna 2 -->
            <TabPane Key="1" Tab="Daty w zamówienu">
                <AntDesign.FormItem Label="Data Zamówienia">
                    <DatePicker @bind-Value="elementyZamowienia.ElemetZamDoZlecen.DataZamowienia" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Data Realizacji">
                    <DatePicker @bind-Value="elementyZamowienia.ElemetZamDoZlecen.DataRealizacji" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Kto Zapisał">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.KtoZapisal" Required ReadOnly />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Data Dostarczenia">
                    <DatePicker @bind-Value="elementyZamowienia.ElemetZamDoZlecen.DataDostarczenia" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Ostatnia Zmiana">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.OstatniaZmiana" ReadOnly />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Uwagi">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Uwagi" />
                </AntDesign.FormItem>
            </TabPane>

            <TabPane Key="2" Tab="Jednostki">
                <AntDesign.FormItem Label="Długość">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Dlugosc" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Szerokość">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Szerokosc" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Wysokość">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Wysokosc" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Waga">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Waga " Placeholder="Podaj wagę" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Powierzchnia">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Powierzchnia" Placeholder="Podaj powierzchnię" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Objętość">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Objetosc" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Cena Netto">
                    <AntDesign.Input Type="number" Step="0.01" @bind-Value="elementyZamowienia.ElemetZamDoZlecen.CenaNetto" />
                </AntDesign.FormItem>
                <AntDesign.FormItem Label="Opis">
                    <AntDesign.Input @bind-Value="elementyZamowienia.ElemetZamDoZlecen.Opis" Placeholder="Podaj opis produktu" />
                </AntDesign.FormItem>
            </TabPane>
            <TabPane Key="3" Tab="Wylicz wkładkę">
                <AntDesign.Row Gutter="16">
                    <AntDesign.Col Span="12">
                        <img src="../Images/dob_wkladek.jpg" style="width: 100%; max-width: 400px;" />
                    </AntDesign.Col>
                    <AntDesign.Col Span="18">
                        <AntDesign.FormItem Label="Wartość wysunięcia poza szyld domyślnie 2-3mm" Class="form-item-small-margin">
                            <AntDesign.Input Type="number" Step="0.01" @bind-Value="@wkladka_wys" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Grubość szyldu / Rozety wew.">
                            <AntDesign.Input Type="number" Step="0.01" @bind-Value="@wkladka_szyldWew" Class="form-item-small-margin" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Odległość od pow. drzwi do środka rowka - Wymiar A" Class="form-item-small-margin">
                            <AntDesign.Input Type="number" Step="0.01" @bind-Value="@wkladka_wymA" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Odległość od pow. drzwi do środka rowka - Wymiar B" Class="form-item-small-margin">
                            <AntDesign.Input Type="number" Step="0.01" @bind-Value="@wkladka_wymB" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Grubość szyldu / Rozety zew." Class="form-item-small-margin">
                            <AntDesign.Input Type="number" Step="0.01" @bind-Value="@wkladka_szyldZew" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Wkładko gałka" Class="form-item-small-margin">
                            <Switch @bind-Value="@wkladkoGalka" />
                        </AntDesign.FormItem>
                        <AntDesign.FormItem Label="Zapisz wynik obliczeń" Class="form-item-small-margin">
                            <Button OnClick="ZapiszWynikObliczeńWkladki">Zapisz wynik obliczeń do Nazwa produktu</Button>
                        </AntDesign.FormItem>
                    </AntDesign.Col>
                </AntDesign.Row>
            </TabPane>

        </Tabs>

        <AntDesign.FormItem Style="justify-content: flex-end; display: flex; gap: 10px;">
            <AntDesign.Button Type="primary" @onclick="@HandleAddNew" HtmlType="submit">Zapisz</AntDesign.Button>
            <AntDesign.Button @onclick="@HandleCancel">Anuluj</AntDesign.Button>
        </AntDesign.FormItem>

    </AntDesign.Form>

}


@code {
    [Parameter]
    public ElemetZamDoZlecenWithProducent? elementyZamowienia { get; set; }

    [Parameter]
    public List<ElemetZamDoZlecenWithProducent>? elementyDoZlecen { get; set; }

    [Parameter]
    public EventCallback OnButtonClicked { get; set; }

    [Inject] private AppState AppState { get; set; } = default!;

    private List<ProducenciPodwykonawcy>? _producenci;

    private ProducenciPodwykonawcy? Producent;

    private bool bAdmin = true;

    private int wkladka_wys = 3;
    private int wkladka_szyldWew = 0;
    private int wkladka_wymA = 0;
    private int wkladka_wymB = 0;
    private int wkladka_szyldZew = 0;
    private bool wkladkoGalka = false;

    protected override async Task OnInitializedAsync()
    {
        if (AppState != null)
        {
            AppState.SomeData = "";
        }

        _itemsJednostki = new List<Item>
        {
            new Item { Value = "szt.", Name = "szt.", DisplayName = "sztuki"},
            new Item { Value = "kpl.", Name = "kpl.", DisplayName = "komplet"},
            new Item { Value = "mb", Name = "mb", DisplayName = "metry bierzące"},
            new Item { Value = "l", Name = "l", DisplayName = "litry"},
            new Item { Value = "kg", Name = "kg", DisplayName = "kilogramy"},
            new Item { Value = "g", Name = "g", DisplayName = "gramy"},
            new Item { Value = "t", Name = "t", DisplayName = "tony"},
            new Item { Value = "m3", Name = "m3", DisplayName = "metry sześcienny"},
        };


        _producenci = await Http.GetFromJsonAsync<List<ProducenciPodwykonawcy>>($"api/ProducenciPodwykonawcy");

    }

    //------------------------------------------------------------------------------------------------------------------------

    bool submitOk = false;
    private async Task HandleSubmit()
    {

        Console.WriteLine($"Start zapisu RowIdProducent: {elementyZamowienia.ElemetZamDoZlecen.RowIdProducent}.");

        elementyZamowienia.ElemetZamDoZlecen.NazwaProduktu = elementyZamowienia.ElemetZamDoZlecen.NazwaProduktu.Trim();


        HttpResponseMessage response;

        if (elementyZamowienia.ElemetZamDoZlecen.Id == 0)
        {
            // Sprawdź unikalność NumerRodzajuKart
            var responsedbl = elementyDoZlecen.Where(e => e.ElemetZamDoZlecen.RowIdZlecenia == elementyZamowienia.ElemetZamDoZlecen.RowIdZlecenia);

            elementyZamowienia.ElemetZamDoZlecen.DataZapisu = DateTime.Now;

            if (responsedbl != null && responsedbl.Count() > 0)
            {
                // Wyświetl komunikat o błędzie, że NumerRodzajuKart nie jest unikalny
                Console.WriteLine("Zapisuje kolejne dane do zlecenia!!!.");
                // await _message.Error("Numer Rodzaju Kart musi być unikalny.");
                // return;
            }

            response = await Http.PostAsJsonAsync("api/ElementyDoZlecen", elementyZamowienia.ElemetZamDoZlecen);
        }
        else
        {
            response = await Http.PutAsJsonAsync($"api/ElementyDoZlecen/{elementyZamowienia.ElemetZamDoZlecen.Id}", elementyZamowienia.ElemetZamDoZlecen);
            // if (elementyDoZlecen != null) oryginalElementyDoZlecen = elementyDoZlecen.DeepCopyList();
        }

        if (response.IsSuccessStatusCode)
        {
            // Obsługa błędów
            Console.WriteLine("Błąd podczas zapisywania rodzaju elementyZamowienia - źródło RAZOR");
        }

        await HandleCancel();

        submitOk = true;
    }

    public async Task HandleAddNew()
    {
        if (submitOk)
            await HandleCancel();
    }

    public async Task HandleCancel()
    {

        if (OnButtonClicked.HasDelegate)
        {
            await OnButtonClicked.InvokeAsync();
        }
    }

    public async Task DodajUwSprawdz()
    {
        elementyZamowienia.ElemetZamDoZlecen.Opis = $"Sprawdzić!! - Zapisano: {DateTime.Now}";
        await Task.CompletedTask;
    }

    public async Task ZapiszWynikObliczeńWkladki()
    {
        // Funkcja zaokrąglająca w górę do najbliższej wartości będącej wielokrotnością 5
        double ZaokraglijWGoreDo5mm(double wartosc)
        {
            return Math.Ceiling(wartosc / 5) * 5;
        }

        // Obliczanie wartości A i B oraz ich zaokrąglanie
        double sumaA = wkladka_wys + wkladka_szyldWew + wkladka_wymA;
        double sumaB = wkladka_wys + wkladka_szyldZew + wkladka_wymB;

        double zaokraglonaA = ZaokraglijWGoreDo5mm(sumaA);
        double zaokraglonaB = ZaokraglijWGoreDo5mm(sumaB);

        // Sprawdzamy, czy wkładko gałka jest ustawione na true
        if (wkladkoGalka)
        {
            elementyZamowienia.ElemetZamDoZlecen.NazwaProduktu = $"Wkładka Gałka Klasa C Standard E8 A={zaokraglonaA} B={zaokraglonaB}";
        }
        else
        {
            elementyZamowienia.ElemetZamDoZlecen.NazwaProduktu = $"Wkładka Klasa C Standard E8 A={zaokraglonaA} B={zaokraglonaB}";
        }

        await Task.CompletedTask;
    }


    List<Item>? _itemsJednostki;

    public class Item
    {
        public string? Value { get; set; }
        public string? Name { get; set; }
        public string? DisplayName { get; set; }
    }
}

